
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ArticlesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  imageUrl: 'imageUrl',
  views: 'views',
  userId: 'userId',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ChatGroupMembersScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  chatGroupId: 'chatGroupId',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ChatGroupsScalarFieldEnum = {
  id: 'id',
  keyForChatOne: 'keyForChatOne',
  name: 'name',
  ownerId: 'ownerId',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ChatMessagesScalarFieldEnum = {
  id: 'id',
  chatGroupId: 'chatGroupId',
  userIdSender: 'userIdSender',
  messageText: 'messageText',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PermissionsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  endpoint: 'endpoint',
  method: 'method',
  module: 'module',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RolePermissionScalarFieldEnum = {
  id: 'id',
  roleId: 'roleId',
  permissionId: 'permissionId',
  isActive: 'isActive',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RolesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  isActive: 'isActive',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  email: 'email',
  fullName: 'fullName',
  avatar: 'avatar',
  password: 'password',
  facebookId: 'facebookId',
  googleId: 'googleId',
  roleId: 'roleId',
  deletedBy: 'deletedBy',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.ArticlesOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content',
  imageUrl: 'imageUrl'
};

exports.Prisma.ChatGroupsOrderByRelevanceFieldEnum = {
  keyForChatOne: 'keyForChatOne',
  name: 'name'
};

exports.Prisma.ChatMessagesOrderByRelevanceFieldEnum = {
  messageText: 'messageText'
};

exports.Prisma.PermissionsOrderByRelevanceFieldEnum = {
  name: 'name',
  endpoint: 'endpoint',
  method: 'method',
  module: 'module'
};

exports.Prisma.RolesOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.UsersOrderByRelevanceFieldEnum = {
  email: 'email',
  fullName: 'fullName',
  avatar: 'avatar',
  password: 'password',
  facebookId: 'facebookId',
  googleId: 'googleId'
};


exports.Prisma.ModelName = {
  Articles: 'Articles',
  ChatGroupMembers: 'ChatGroupMembers',
  ChatGroups: 'ChatGroups',
  ChatMessages: 'ChatMessages',
  Permissions: 'Permissions',
  RolePermission: 'RolePermission',
  Roles: 'Roles',
  Users: 'Users'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/vulebaolong/Dragon/Work/Tech_node/folow_class/node_52/ExpressJS/src/common/prisma/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/vulebaolong/Dragon/Work/Tech_node/folow_class/node_52/ExpressJS/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../../../.env",
    "schemaEnvPath": "../../../../../.env"
  },
  "relativePath": "../../../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/common/prisma/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Articles {\n  id        Int       @id @default(autoincrement())\n  title     String?   @db.VarChar(255)\n  content   String?   @db.Text\n  imageUrl  String?   @db.VarChar(500)\n  views     Int       @default(0)\n  userId    Int\n  deletedBy Int       @default(0)\n  isDeleted Boolean   @default(false)\n  deletedAt DateTime? @db.Timestamp(0)\n  createdAt DateTime  @default(now()) @db.Timestamp(0)\n  updatedAt DateTime  @default(now()) @db.Timestamp(0)\n}\n\nmodel ChatGroupMembers {\n  id          Int         @id @default(autoincrement())\n  userId      Int?\n  chatGroupId Int?\n  deletedBy   Int         @default(0)\n  isDeleted   Boolean     @default(false)\n  deletedAt   DateTime?   @db.Timestamp(0)\n  createdAt   DateTime    @default(now()) @db.Timestamp(0)\n  updatedAt   DateTime    @default(now()) @db.Timestamp(0)\n  Users       Users?      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"ChatGroupMembers_ibfk_1\")\n  ChatGroups  ChatGroups? @relation(fields: [chatGroupId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"ChatGroupMembers_ibfk_2\")\n\n  @@index([chatGroupId], map: \"chatGroupId\")\n  @@index([userId], map: \"userId\")\n}\n\nmodel ChatGroups {\n  id               Int                @id @default(autoincrement())\n  keyForChatOne    String?            @unique(map: \"keyForChatOne\") @db.VarChar(255)\n  name             String?            @db.VarChar(255)\n  ownerId          Int?\n  deletedBy        Int                @default(0)\n  isDeleted        Boolean            @default(false)\n  deletedAt        DateTime?          @db.Timestamp(0)\n  createdAt        DateTime           @default(now()) @db.Timestamp(0)\n  updatedAt        DateTime           @default(now()) @db.Timestamp(0)\n  ChatGroupMembers ChatGroupMembers[]\n  Users            Users?             @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"ChatGroups_ibfk_1\")\n  ChatMessages     ChatMessages[]\n\n  @@index([ownerId], map: \"ownerId\")\n}\n\nmodel ChatMessages {\n  id           Int        @id @default(autoincrement())\n  chatGroupId  Int\n  userIdSender Int\n  messageText  String?    @db.Text\n  deletedBy    Int        @default(0)\n  isDeleted    Boolean    @default(false)\n  deletedAt    DateTime?  @db.Timestamp(0)\n  createdAt    DateTime   @default(now()) @db.Timestamp(0)\n  updatedAt    DateTime   @default(now()) @db.Timestamp(0)\n  ChatGroups   ChatGroups @relation(fields: [chatGroupId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"ChatMessages_ibfk_1\")\n  Users        Users      @relation(fields: [userIdSender], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"ChatMessages_ibfk_2\")\n\n  @@index([chatGroupId], map: \"chatGroupId\")\n  @@index([userIdSender], map: \"userIdSender\")\n}\n\nmodel Permissions {\n  id             Int              @id @default(autoincrement())\n  name           String           @db.VarChar(255)\n  endpoint       String           @db.VarChar(255)\n  method         String           @db.VarChar(100)\n  module         String           @db.VarChar(100)\n  deletedBy      Int              @default(0)\n  isDeleted      Boolean          @default(false)\n  deletedAt      DateTime         @default(now()) @db.Timestamp(0)\n  createdAt      DateTime         @default(now()) @db.Timestamp(0)\n  updatedAt      DateTime         @default(now()) @db.Timestamp(0)\n  RolePermission RolePermission[]\n}\n\nmodel RolePermission {\n  id           Int         @id @default(autoincrement())\n  roleId       Int\n  permissionId Int\n  isActive     Boolean?    @default(true)\n  deletedBy    Int         @default(0)\n  isDeleted    Boolean     @default(false)\n  deletedAt    DateTime?   @db.Timestamp(0)\n  createdAt    DateTime    @default(now()) @db.Timestamp(0)\n  updatedAt    DateTime    @default(now()) @db.Timestamp(0)\n  Roles        Roles       @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"RolePermission_ibfk_1\")\n  Permissions  Permissions @relation(fields: [permissionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"RolePermission_ibfk_2\")\n\n  @@index([permissionId], map: \"permissionId\")\n  @@index([roleId], map: \"roleId\")\n}\n\nmodel Roles {\n  id             Int              @id @default(autoincrement())\n  name           String?          @db.VarChar(255)\n  description    String?          @db.VarChar(255)\n  isActive       Boolean?         @default(true)\n  deletedBy      Int              @default(0)\n  isDeleted      Boolean          @default(false)\n  deletedAt      DateTime?        @db.Timestamp(0)\n  createdAt      DateTime         @default(now()) @db.Timestamp(0)\n  updatedAt      DateTime?        @db.Timestamp(0)\n  RolePermission RolePermission[]\n  Users          Users[]\n}\n\nmodel Users {\n  id               Int                @id @default(autoincrement())\n  email            String             @unique(map: \"email\") @db.VarChar(255)\n  fullName         String?            @db.VarChar(255)\n  avatar           String?            @db.VarChar(255)\n  password         String?            @db.VarChar(255)\n  facebookId       String?            @unique(map: \"facebookId\") @db.VarChar(255)\n  googleId         String?            @unique(map: \"googleId\") @db.VarChar(255)\n  roleId           Int                @default(2)\n  deletedBy        Int                @default(0)\n  isDeleted        Boolean            @default(false)\n  deletedAt        DateTime?          @db.Timestamp(0)\n  createdAt        DateTime           @default(now()) @db.Timestamp(0)\n  updatedAt        DateTime           @default(now()) @db.Timestamp(0)\n  ChatGroupMembers ChatGroupMembers[]\n  ChatGroups       ChatGroups[]\n  ChatMessages     ChatMessages[]\n  Roles            Roles              @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: \"Users_ibfk_1\")\n\n  @@index([roleId], map: \"roleId\")\n}\n",
  "inlineSchemaHash": "4524124b350b12643cd2b35685b953ffaa0fe4a72506105313d71a346dd3b3b4",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Articles\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deletedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isDeleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ChatGroupMembers\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chatGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deletedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isDeleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Users\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"ChatGroupMembersToUsers\"},{\"name\":\"ChatGroups\",\"kind\":\"object\",\"type\":\"ChatGroups\",\"relationName\":\"ChatGroupMembersToChatGroups\"}],\"dbName\":null},\"ChatGroups\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"keyForChatOne\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deletedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isDeleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ChatGroupMembers\",\"kind\":\"object\",\"type\":\"ChatGroupMembers\",\"relationName\":\"ChatGroupMembersToChatGroups\"},{\"name\":\"Users\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"ChatGroupsToUsers\"},{\"name\":\"ChatMessages\",\"kind\":\"object\",\"type\":\"ChatMessages\",\"relationName\":\"ChatGroupsToChatMessages\"}],\"dbName\":null},\"ChatMessages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chatGroupId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userIdSender\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"messageText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deletedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isDeleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ChatGroups\",\"kind\":\"object\",\"type\":\"ChatGroups\",\"relationName\":\"ChatGroupsToChatMessages\"},{\"name\":\"Users\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"ChatMessagesToUsers\"}],\"dbName\":null},\"Permissions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endpoint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"module\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deletedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isDeleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"RolePermission\",\"kind\":\"object\",\"type\":\"RolePermission\",\"relationName\":\"PermissionsToRolePermission\"}],\"dbName\":null},\"RolePermission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"permissionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deletedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isDeleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Roles\",\"kind\":\"object\",\"type\":\"Roles\",\"relationName\":\"RolePermissionToRoles\"},{\"name\":\"Permissions\",\"kind\":\"object\",\"type\":\"Permissions\",\"relationName\":\"PermissionsToRolePermission\"}],\"dbName\":null},\"Roles\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deletedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isDeleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"RolePermission\",\"kind\":\"object\",\"type\":\"RolePermission\",\"relationName\":\"RolePermissionToRoles\"},{\"name\":\"Users\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"RolesToUsers\"}],\"dbName\":null},\"Users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"facebookId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"googleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deletedBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isDeleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deletedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ChatGroupMembers\",\"kind\":\"object\",\"type\":\"ChatGroupMembers\",\"relationName\":\"ChatGroupMembersToUsers\"},{\"name\":\"ChatGroups\",\"kind\":\"object\",\"type\":\"ChatGroups\",\"relationName\":\"ChatGroupsToUsers\"},{\"name\":\"ChatMessages\",\"kind\":\"object\",\"type\":\"ChatMessages\",\"relationName\":\"ChatMessagesToUsers\"},{\"name\":\"Roles\",\"kind\":\"object\",\"type\":\"Roles\",\"relationName\":\"RolesToUsers\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

